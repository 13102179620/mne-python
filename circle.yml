machine:
  python:
    version: 2.7.10
  environment:
    # We need to set this variable to let Anaconda take precedence
    PATH: "/home/ubuntu/miniconda/envs/circleenv/bin:/home/ubuntu/miniconda/bin:$PATH"

dependencies:
  cache_directories:
    - "/home/ubuntu/miniconda"
    - "/home/ubuntu/.mne"
    - "/home/ubuntu/examples"
  # Various dependencies
  pre:
    # Get a running Python
    - cd ~
    # Disable pyenv (no cleaner way provided by CircleCI as it prepends pyenv version to PATH)
    - rm -rf ~/.pyenv
    - rm -rf ~/virtualenvs
    # Get Anaconda and conda-based requirements
    - if [ ! -d "/home/ubuntu/miniconda" ]; then
        echo "Setting up conda";
        wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O ~/miniconda.sh;
        chmod +x ~/miniconda.sh;
        ~/miniconda.sh -b -p /home/ubuntu/miniconda;
        conda update --yes --quiet conda;
        conda create -n circleenv --yes pip python=2.7 pip numpy scipy scikit-learn mayavi matplotlib sphinx PIL six IPython;
        sed -i "s/ENABLE_USER_SITE = .*/ENABLE_USER_SITE = False/g" /home/ubuntu/miniconda/envs/circleenv/lib/python2.7/site.py;
      else
        echo "Conda already set up.";
      fi;
    - ls -al /home/ubuntu/miniconda
    - ls -al /home/ubuntu/miniconda/bin
    - echo $PATH
    - which python
    - which pip
    # Last of the requirements
    - git clone https://github.com/sphinx-gallery/sphinx-gallery.git
    - cd sphinx-gallery && pip install -r requirements.txt && python setup.py develop
    - pip install sphinx-bootstrap-theme PySurfer nilearn neo
  override:
    - python setup.py develop
    - python -c "import mne; mne.sys_info()"
    - mkdir -p ~/examples
    - python -c "import mne, os; print(mne.datasets.sample.data_path(os.path.join(os.environ['HOME'], 'examples'), verbose=True))"
    - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset

test:
  override:
    # Some examples take longer than 10 minutes to run.
    - if [ -n "${RUN_NIGHTLY_BUILD}" ]; then case $CIRCLE_NODE_INDEX in 0) cd doc && make html_dev-pattern PATTERN='/io/plot_\|/inverse/plot_\|/visualization/plot_' ;; 1) cd doc && make html_dev-pattern PATTERN='/preprocessing/plot_\|/datasets/plot_' ;; 2) cd doc && make html_dev-pattern PATTERN='/tutorials/plot_\|/examples/plot_' ;; 3) cd doc && make html_dev-pattern PATTERN='/connectivity/plot_\|/realtime/plot_\|/forward/plot_\|/stats/plot_\|/time_frequency/plot_\|/simulation/plot_\|/decoding/plot_' ;; esac fi:
        parallel: true
        timeout: 1500

general:
  # Open the doc to the API
  artifacts:
    - "doc/_build/html"
